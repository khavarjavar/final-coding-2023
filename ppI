#include <stdio.h>
#include <math.h>
int k, n, res;
int f(int k, int n)
{
	if (k == n) return 1;
	if (k == 0) return 1;
	return f(k - 1, n - 1) + f(k, n - 1);
}
int main(void)
{
	scanf("%d %d", &k, &n);
	res = f(k, n);
	printf("%d\n", res);
	return 0;
}

//<------------------------------------------------------------------------------------------------------------------------------------>//


#include <stdio.h>
#include <string.h>

//#define SIZE 6

struct point

{
    int x;
    int y;
    int z;

} p;

int s = 0;
int main()

{

    FILE* fp;

    fp = fopen("C:\\Users\\ASUS\\Downloads\\input(42) (2).txt", "r");
     fseek(fp, 0, SEEK_END);

   // int min = 1000;

    while (fscanf(fp, "%2d%2d%2d", &p.x, &p.y, &p.z) == 3)

    {

        if ((p.z % 2) != 0)

        {

            s += p.y;

        }

    }

   // printf("%d\n", s); //  ... 1st line
 printf("%d", ftell(fp));

    return 0;

    //int cnt = 0;



}

//<------------------------------------------------------------------------------------------------------------------------------------>//



	Two dimensional array of size n * n is given. Find the sum of elements in its k-th row. Row numbers start from 1.
Input
First line contains the size of array n (n â‰¤ 100) and number k. Each of the next n lines contains n integers.
Output
Print the sum of elements in the k-th row of array.
Sample Input
3 2
4 6 7
8 3 2
5 4 2
Sample Output
13

input.txt
 			


#include <stdio.h>
int i, j, n, k, sum = 0;
char a[10000][10000];
int main()
{
    scanf("%d%d", &n, &k);
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
        scanf("%d", &a[i][j]);

        }
    }

    for (i = 0; i < n; i++)
    {
        for (j = k * n - n; j < k * n; j++)
        {
            sum += a[i][j];
        }
      
    }
    printf("%d", sum);

    return 0;

}


//<------------------------------------------------------------------------------------------------------------------------------------>//





#include <stdio.h>
#include <string.h>

//#define SIZE 6

struct point

{
    int x;
    int y;
    int z;

} p;

int s = 0;
int main()

{

    FILE* fp;

    fp = fopen("input.txt", "r");
    // fseek(fp, 0, SEEK_END);

   // int min = 1000;

    while (fscanf(fp, "%2d%2d%2d", &p.x, &p.y, &p.z) == 3)

    {

        if ((p.z % 2) != 0)

        {

            s += p.y;

        }

    }

    printf("%d\n", s); //  ... 1st line


    //int cnt = 0;


    return 0;

}





-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#include <stdio.h>
#include <string.h>

//#define SIZE 6

struct person

{
    // char name[SIZE]; // 5 bytes + 0

    char surname[11]; // 5 bytes + 0

    int age; // 10..99

    int salary; // 1000..9999

};

struct person p, temp;
int i, n;
int main()

{

    FILE* fp;

    fp = fopen("input.txt", "r");
    // fseek(fp, 0, SEEK_END);

    int min = 1000;

    while (fscanf(fp, "%10s%2d%3d", p.surname, &p.age, &p.salary) == 3)

    {

       
if (p.salary < min)

        {

            min = p.salary;

        }

    }

    printf("%d\n", min); //  ... 1st line//bele olanda 1k verir
    // printf("%d", ftell(fp)); //bele 3238


    //int cnt = 0;


    return 0;

}









